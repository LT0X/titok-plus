// Code generated by goctl. DO NOT EDIT.
package types

type RegisterRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type RegisterResponse struct {
	BaseResponse
	UserId int64  `json:"user_id"`
	Token  string `json:"token"`
}

type LoginRequest struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginResponse struct {
	BaseResponse
	UserId int64  `json:"user_id"`
	Token  string `json:"token"`
}

type UserInfoRequest struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type UserInfoResponse struct {
	BaseResponse
	User UserInfo `json:"user"`
}

type FollowsActionRequest struct {
	Token      string `form:"token"`
	ToUserId   int64  `form:"to_user_id"`
	ActionType int32  `form:"action_type"`
}

type FollowsActionResponse struct {
	BaseResponse
}

type FollowListRequest struct {
	Token  string `form:"token"`
	UserId int64  `form:"user_id"`
}

type FollowListResponse struct {
	BaseResponse
	UserList []UserInfo `json:"user_list"`
}

type FanListRequest struct {
	Token  string `form:"token"`
	UserId int64  `form:"user_id"`
}

type FanListResponse struct {
	BaseResponse
	UserList []UserInfo `json:"user_list"`
}

type BaseResponse struct {
	StatusCode int64  `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type UserInfo struct {
	Id              int64  `json:"id" gorm:"primary key"`
	Name            string `json:"name"`
	FollowCount     int64  `json:"follow_count"`
	FollowerCount   int64  `json:"follower_count"`
	IsFollow        bool   `json:"is_follow" gorm:"-"`
	Avatar          string `json:"avatar"`
	BackgroundImage string `json:"background_image"`
	Signature       string `json:"signature"`
	TotalFavorited  int64  `json:"total_favorited"`
	WorkCount       int64  `json:"work_count"`
	FavoriteCount   int64  `json:"favorite_count"`
}

type Video struct {
	Id            int64     `json:"id"`
	UserInfoId    int64     `json:"-"`
	Author        *UserInfo `json:"author" gorm:"-"`
	PlayUrl       string    `json:"play_url"`
	CoverUrl      string    `json:"cover_url"`
	FavoriteCount int64     `json:"favorite_count"`
	CommentCount  int64     `json:"comment_count"`
	IsFavorite    bool      `json:"is_favorite" gorm:"-"`
	Title         string    `json:"title"`
}

type Comment struct {
	Id         int64    `json:"id"`
	UserInfoId int64    `json:"-"`
	VideoId    int64    `json:"-"`
	UserInfo   UserInfo `json:"user"`
	Content    string   `json:"content"`
	LikeCount  int32      `json:"like_count"`
	TeaseCount int32      `json:"tease_count"`
	CreateDate string   `json:"create_date"`
}

type Message struct {
	Id         int64  `json:"id"`
	Content    string `json:"content"`
	CreateTime int64  `json:"create_time"`
	FromUserId int64  `json:"from_user_id"`
	ToUserId   int64  `json:"to_user_id"`
}

type FeedRequest struct {
	LatestTime int64  `form:"latest_time"`
	Token      string `form:"token"`
}

type FeedResponse struct {
	BaseResponse
	VideoList []Video `json:"video_list"`
	NextTime  int64   `json:"nextTime"`
}

type PublishVideoRequest struct {
	Token string `form:"token"`
	Title string `form:"title"`
}

type PublishVideoResponse struct {
	BaseResponse
}

type PublishVideoListRequest struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type PublishVideoListResponse struct {
	BaseResponse
	VideoList []Video `json:"video_list"`
}

type FavoriteListRequest struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FavoriteListResponse struct {
	BaseResponse
	VideoList []Video `json:"video_list"`
}

type FavoriteActionRequest struct {
	Token      string `form:"token"`
	VideoId    int64  `form:"video_id"`
	ActionType int32  `form:"action_type"`
}

type FavoriteActionResponse struct {
	BaseResponse
}

type CommentActionRequest struct {
	Token       string `form:"token"`
	VideoId     int64  `form:"video_id"`
	ActionType  int32  `form:"action_type"`
	CommentText string `form:"comment_text"`
	CommentId   string `form:"comment_Id"`
}

type CommentActionResponse struct {
	BaseResponse
	Comment Comment `json:"comment"`
}

type CommentListRequest struct {
	Token   string `form:"token"`
	VideoId int64  `form:"video_id"`
}

type CommentListResponse struct {
	BaseResponse
	CommentList []Comment `json:"comment_list"`
}

type FriendListRequest struct {
	UserId int64  `form:"user_id"`
	Token  string `form:"token"`
}

type FriendListReply struct {
	BaseResponse
	UserInfoList []UserInfo `json:"user_list"` // 没错就是这个名字
}

type SendMessageRequest struct {
	Token      string `from:"token"`
	ToUserId   int64  `from:"to_user_id"`
	Content    string `from:"content"`
	ActionType int64  `from:"action_type"`
}

type SendMessageReply struct {
	BaseResponse
}

type HistoryMessageRequest struct {
	Token    string `form:"token"`
	ToUserId int64  `form:"to_user_id"`
	PreMsgTime int64  `form:"pre_msg_time"`
}

type HistoryMessageReply struct {
	BaseResponse
	MessageList []Message `json:"message_list"`
}
