// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoclient

import (
	"context"

	"tiktok-plus/service/rpc/video/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment                          = video.Comment
	CommentActionRequest             = video.CommentActionRequest
	CreateVideoRequest               = video.CreateVideoRequest
	Empty                            = video.Empty
	FavoriteActionRequest            = video.FavoriteActionRequest
	GetCommentListRequest            = video.GetCommentListRequest
	GetCommentListResponse           = video.GetCommentListResponse
	GetPublishListRequest            = video.GetPublishListRequest
	GetPublishListResponse           = video.GetPublishListResponse
	GetUserInfoIdsByVideoIdsRequest  = video.GetUserInfoIdsByVideoIdsRequest
	GetUserInfoIdsByVideoIdsResponse = video.GetUserInfoIdsByVideoIdsResponse
	GetVideoFeedRequest              = video.GetVideoFeedRequest
	GetVideoFeedResponse             = video.GetVideoFeedResponse
	UpdateVideoLikeCountRequest      = video.UpdateVideoLikeCountRequest
	VideoInfo                        = video.VideoInfo

	Video interface {
		PublishVideo(ctx context.Context, in *CreateVideoRequest, opts ...grpc.CallOption) (*Empty, error)
		GetPublishList(ctx context.Context, in *GetPublishListRequest, opts ...grpc.CallOption) (*GetPublishListResponse, error)
		GetVideoFeed(ctx context.Context, in *GetVideoFeedRequest, opts ...grpc.CallOption) (*GetVideoFeedResponse, error)
		FavoriteAction(ctx context.Context, in *FavoriteActionRequest, opts ...grpc.CallOption) (*Empty, error)
		CommentAction(ctx context.Context, in *CommentActionRequest, opts ...grpc.CallOption) (*Empty, error)
		GetCommentList(ctx context.Context, in *GetCommentListRequest, opts ...grpc.CallOption) (*GetCommentListResponse, error)
		UpdateVideoLikeCount(ctx context.Context, in *UpdateVideoLikeCountRequest, opts ...grpc.CallOption) (*Empty, error)
		GetUserInfoIdsByVideoIds(ctx context.Context, in *GetUserInfoIdsByVideoIdsRequest, opts ...grpc.CallOption) (*GetUserInfoIdsByVideoIdsResponse, error)
	}

	defaultVideo struct {
		cli zrpc.Client
	}
)

func NewVideo(cli zrpc.Client) Video {
	return &defaultVideo{
		cli: cli,
	}
}

func (m *defaultVideo) PublishVideo(ctx context.Context, in *CreateVideoRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.PublishVideo(ctx, in, opts...)
}

func (m *defaultVideo) GetPublishList(ctx context.Context, in *GetPublishListRequest, opts ...grpc.CallOption) (*GetPublishListResponse, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.GetPublishList(ctx, in, opts...)
}

func (m *defaultVideo) GetVideoFeed(ctx context.Context, in *GetVideoFeedRequest, opts ...grpc.CallOption) (*GetVideoFeedResponse, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.GetVideoFeed(ctx, in, opts...)
}

func (m *defaultVideo) FavoriteAction(ctx context.Context, in *FavoriteActionRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.FavoriteAction(ctx, in, opts...)
}

func (m *defaultVideo) CommentAction(ctx context.Context, in *CommentActionRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}

func (m *defaultVideo) GetCommentList(ctx context.Context, in *GetCommentListRequest, opts ...grpc.CallOption) (*GetCommentListResponse, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}

func (m *defaultVideo) UpdateVideoLikeCount(ctx context.Context, in *UpdateVideoLikeCountRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.UpdateVideoLikeCount(ctx, in, opts...)
}

func (m *defaultVideo) GetUserInfoIdsByVideoIds(ctx context.Context, in *GetUserInfoIdsByVideoIdsRequest, opts ...grpc.CallOption) (*GetUserInfoIdsByVideoIdsResponse, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.GetUserInfoIdsByVideoIds(ctx, in, opts...)
}
