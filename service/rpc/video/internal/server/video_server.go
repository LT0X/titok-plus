// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"tiktok-plus/service/rpc/video/internal/logic"
	"tiktok-plus/service/rpc/video/internal/svc"
	"tiktok-plus/service/rpc/video/video"
)

type VideoServer struct {
	svcCtx *svc.ServiceContext
	video.UnimplementedVideoServer
}

func NewVideoServer(svcCtx *svc.ServiceContext) *VideoServer {
	return &VideoServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServer) PublishVideo(ctx context.Context, in *video.CreateVideoRequest) (*video.Empty, error) {
	l := logic.NewPublishVideoLogic(ctx, s.svcCtx)
	return l.PublishVideo(in)
}

func (s *VideoServer) GetPublishList(ctx context.Context, in *video.GetPublishListRequest) (*video.GetPublishListResponse, error) {
	l := logic.NewGetPublishListLogic(ctx, s.svcCtx)
	return l.GetPublishList(in)
}

func (s *VideoServer) GetVideoFeed(ctx context.Context, in *video.GetVideoFeedRequest) (*video.GetVideoFeedResponse, error) {
	l := logic.NewGetVideoFeedLogic(ctx, s.svcCtx)
	return l.GetVideoFeed(in)
}

func (s *VideoServer) FavoriteAction(ctx context.Context, in *video.FavoriteActionRequest) (*video.Empty, error) {
	l := logic.NewFavoriteActionLogic(ctx, s.svcCtx)
	return l.FavoriteAction(in)
}

func (s *VideoServer) CommentAction(ctx context.Context, in *video.CommentActionRequest) (*video.Empty, error) {
	l := logic.NewCommentActionLogic(ctx, s.svcCtx)
	return l.CommentAction(in)
}

func (s *VideoServer) GetCommentList(ctx context.Context, in *video.GetCommentListRequest) (*video.GetCommentListResponse, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}

func (s *VideoServer) UpdateVideoLikeCount(ctx context.Context, in *video.UpdateVideoLikeCountRequest) (*video.Empty, error) {
	l := logic.NewUpdateVideoLikeCountLogic(ctx, s.svcCtx)
	return l.UpdateVideoLikeCount(in)
}

func (s *VideoServer) GetUserInfoIdsByVideoIds(ctx context.Context, in *video.GetUserInfoIdsByVideoIdsRequest) (*video.GetUserInfoIdsByVideoIdsResponse, error) {
	l := logic.NewGetUserInfoIdsByVideoIdsLogic(ctx, s.svcCtx)
	return l.GetUserInfoIdsByVideoIds(in)
}
